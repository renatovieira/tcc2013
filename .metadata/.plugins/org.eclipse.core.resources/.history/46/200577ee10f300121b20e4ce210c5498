package br.usp.ime.tcc.activities;

import java.io.File;

import android.app.Activity;
import android.content.Intent;
import android.database.Cursor;
import android.net.Uri;
import android.os.Bundle;
import android.os.Environment;
import android.provider.MediaStore;
import android.view.Menu;
import android.view.View;
import android.view.View.OnClickListener;
import android.widget.Toast;
import br.usp.ime.tcc.activities.components.ComponentUtils;
import br.usp.ime.tcc.utils.Constants;

public class FilterActivity extends Activity {
	private Uri mUri;

	@Override
	public void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);
		setContentView(R.layout.activity_filter);

		loadComponents();
	}

	@Override
	public boolean onCreateOptionsMenu(Menu menu) {
		// Inflate the menu; this adds items to the action bar if it is present.
		getMenuInflater().inflate(R.menu.filter, menu);
		return true;
	}

	private void loadComponents() {
		ComponentUtils cl = new ComponentUtils(this);

		cl.loadButton(R.id.liveModeButton, new OnClickListener() {

			@Override
			public void onClick(View v) {
				// TODO Chamar modo continuo
			}
		});

		cl.loadButton(R.id.galleryModeButton, new OnClickListener() {

			@Override
			public void onClick(View v) {
				startGalleryChooser();
			}

			private void startGalleryChooser() {
				Intent photoPickerIntent = new Intent(
						Intent.ACTION_PICK,
						android.provider.MediaStore.Images.Media.EXTERNAL_CONTENT_URI);
				photoPickerIntent.setType("image/*");

				startActivityForResult(photoPickerIntent,
						Constants.SELECT_PICTURE);
			}
		});

		cl.loadButton(R.id.cameraModeButton, new OnClickListener() {
			@Override
			public void onClick(View v) {
				Intent takePictureIntent = new Intent(
						MediaStore.ACTION_IMAGE_CAPTURE);
				mUri = Uri.fromFile(new File(Environment
						.getExternalStorageDirectory(), "tcc_temp_"
						+ String.valueOf(System.currentTimeMillis()) + ".jpg"));
				takePictureIntent.putExtra(
						android.provider.MediaStore.EXTRA_OUTPUT, mUri);
				takePictureIntent.putExtra("return-data", true);

				startActivityForResult(takePictureIntent,
						Constants.TAKE_PICTURE);
			}
		});
	}

	@Override
	protected void onActivityResult(int requestCode, int resultCode, Intent data) {
		super.onActivityResult(requestCode, resultCode, data);

		if (resultCode == Activity.RESULT_OK) {
			Intent showImageIntent = new Intent(this,
					FilteredImageActivity.class);
			String picturePath;

			switch (requestCode) {
			case Constants.TAKE_PICTURE:
				Toast.makeText(this, mUri, Toast.LENGTH_SHORT).show();
				picturePath = mUri.getPath();
				showImageIntent.putExtra("imagePath", picturePath);
				break;
			case Constants.SELECT_PICTURE:
				picturePath = getSelectedPicturePath(data);

				showImageIntent.putExtra("imagePath", picturePath);
				break;
			}

			startActivity(showImageIntent);
		}

	}

	private String getSelectedPicturePath(Intent data) {
		String picturePath;
		Uri selectedImage = data.getData();
		String[] filePathColumn = { MediaStore.Images.Media.DATA };

		Cursor cursor = getContentResolver().query(selectedImage,
				filePathColumn, null, null, null);
		cursor.moveToFirst();

		int columnIndex = cursor.getColumnIndex(filePathColumn[0]);
		picturePath = cursor.getString(columnIndex);
		cursor.close();
		return picturePath;
	}
}

package br.usp.ime.tcc.activities.test;

import static org.junit.Assert.assertNotNull;
import static org.robolectric.Robolectric.shadowOf;

import org.junit.Before;
import org.junit.Test;
import org.junit.runner.RunWith;
import org.robolectric.Robolectric;
import org.robolectric.RobolectricTestRunner;
import org.robolectric.shadows.ShadowActivity;

import android.content.Intent;
import android.widget.Button;
import br.usp.ime.tcc.activities.FilteredImageActivity;
import br.usp.ime.tcc.activities.R;

@RunWith(RobolectricTestRunner.class)
public class FilteredImageActivityTest {
	private FilteredImageActivity filteredImageActivity;

	private FilteredImageActivity startWithImagePathOnExtras() {
		filteredImageActivity = Robolectric
				.buildActivity(FilteredImageActivity.class).create().get();

		Intent intent = filteredImageActivity.getIntent();
		intent.putExtra("imagePath", "dummy");
		
		return Robolectric.buildActivity(FilteredImageActivity.class).withIntent(intent).create().get();
	}
	
	private Button getButtonById(int buttonId) {
		return (Button) filteredImageActivity.findViewById(buttonId);
	}
	
	private Intent getStartedIntentAfterClickOnButton(Button button) {
		button.performClick();

		ShadowActivity shadowActivity = shadowOf(filterActivity);
		Intent startedIntent = shadowActivity.getNextStartedActivity();
		return startedIntent;
	}
	
	// Tests
	@Before
	public void setUp() throws Exception {
		filteredImageActivity = startWithImagePathOnExtras();
	}

	@Test
	public void extrasShouldNotBeNull () {
		assertNotNull(filteredImageActivity.getIntent().getExtras());
	}
	
	@Test
	public void discardButtonShouldReturnToFilterActivity() {
		Button button = getButtonById(R.id.discard_button);

		Intent startedIntent = getStartedIntentAfterClickOnButton(button);
		return startedIntent;
	}
}

package br.usp.ime.tcc.activities.test;

import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertNotNull;
import static org.robolectric.Robolectric.shadowOf;

import org.junit.Before;
import org.junit.Test;
import org.junit.runner.RunWith;
import org.robolectric.Robolectric;
import org.robolectric.RobolectricTestRunner;
import org.robolectric.shadows.ShadowActivity;
import org.robolectric.shadows.ShadowIntent;

import android.app.Activity;
import android.content.Intent;
import android.provider.MediaStore;
import android.widget.Button;
import br.usp.ime.tcc.activities.FilterActivity;
import br.usp.ime.tcc.activities.FilteredImageActivity;
import br.usp.ime.tcc.activities.R;

@RunWith(RobolectricTestRunner.class)
public class FilterActivityTest {
	private FilterActivity filterActivity;

	private Button liveModeButton;

	private Button cameraModeButton;

	private Button galleryModeButton;

	private void getButtons() {
		liveModeButton = (Button) filterActivity
				.findViewById(R.id.liveModeButton);

		cameraModeButton = (Button) filterActivity
				.findViewById(R.id.cameraModeButton);

		galleryModeButton = (Button) filterActivity
				.findViewById(R.id.galleryModeButton);
	}
	
	private Intent getStartedIntentAfterClickOnButton(Button button) {
		button.performClick();

		ShadowActivity shadowActivity = shadowOf(filterActivity);
		Intent startedIntent = shadowActivity.getNextStartedActivity();
		return startedIntent;
	}

	// Tests

	@Before
	public void setUp() throws Exception {
		filterActivity = Robolectric.buildActivity(FilterActivity.class)
				.create().get();

		getButtons();
	}

	@Test
	public void pressingCameraModeButtonShouldStartCameraActivity() {
		Intent startedIntent = getStartedIntentAfterClickOnButton(cameraModeButton);
		assertNotNull(startedIntent);
		assertEquals(MediaStore.ACTION_IMAGE_CAPTURE)
	}

	@Test
	public void pressingGalleryModeButtonShouldStartGalleryActivity() {
		Intent startedIntent = getStartedIntentAfterClickOnButton(galleryModeButton);
		assertNotNull(startedIntent);
		assertEquals(Intent.ACTION_PICK, startedIntent.getAction());
	}

	@Test
	public void shouldCallFilteredImageActivityAfterGalleryResult() {
		Intent startedIntent = getStartedIntentAfterClickOnButton();

		shadowOf(filterActivity)
				.receiveResult(startedIntent,
						Activity.RESULT_OK,
						new Intent().setData(null));

		startedIntent = shadowActivity.getNextStartedActivity();
		ShadowIntent shadowIntent = shadowOf(startedIntent);
		assertEquals(shadowIntent.getComponent().getClassName(),
				FilteredImageActivity.class.getName());
	}
	
	@Test
	public void shouldCallFilteredImageActivityAfterGalleryResult() {
		Intent startedIntent = getStartedIntentAfterClickOnButton();

		shadowOf(filterActivity)
				.receiveResult(startedIntent,
						Activity.RESULT_OK,
						new Intent().setData(null));

		startedIntent = shadowActivity.getNextStartedActivity();
		ShadowIntent shadowIntent = shadowOf(startedIntent);
		assertEquals(shadowIntent.getComponent().getClassName(),
				FilteredImageActivity.class.getName());
	}
	
	
}

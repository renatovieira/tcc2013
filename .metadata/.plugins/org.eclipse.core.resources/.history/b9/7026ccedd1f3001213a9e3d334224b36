package br.usp.ime.tcc.utils;

import static org.junit.Assert.*;
import static org.mockito.Mockito.*;

import java.io.IOException;
import java.io.OutputStream;

import org.junit.Before;
import org.junit.Test;
import org.junit.runner.RunWith;
import org.powermock.api.mockito.PowerMockito;
import org.powermock.core.classloader.annotations.PrepareForTest;
import org.powermock.modules.junit4.PowerMockRunner;

import android.graphics.Bitmap;
import android.graphics.Bitmap.CompressFormat;

@RunWith(PowerMockRunner.class)
@PrepareForTest(Bitmap.class)
public class FileSaverTest {
	private FileSaver fileSaver;

	@Before
	public void setUp() throws Exception {
		fileSaver = new FileSaver();
	}
	
	@Test
	public void fileToBeSavedShouldNotReturnNull() throws IOException {
		assertNotNull(fileSaver.getFileToBeSaved());
	}
	
	@Test
	public void saveToFileShouldReturnNullIfNullBitmap() throws IOException {
		assertNull(fileSaver.saveToFile(null));
	}
	
//	@Test
//	public void saveToFileShould() throws IOException {
//		Bitmap mockBitmap = PowerMockito.mock(Bitmap.class);
//		when(mockBitmap.compress(any(CompressFormat.class), anyInt(), any(OutputStream.class)));
//		
//		assertNotNull(fileSaver.saveToFile(mockBitmap));
//	}
}

package br.usp.ime.tcc.activities;

import java.io.File;

import android.app.Activity;
import android.content.Intent;
import android.database.Cursor;
import android.graphics.BitmapFactory;
import android.net.Uri;
import android.os.Bundle;
import android.os.Environment;
import android.provider.MediaStore;
import android.view.Menu;
import android.view.View;
import android.view.View.OnClickListener;
import android.widget.Toast;
import br.usp.ime.tcc.activities.components.ComponentLoader;
import br.usp.ime.tcc.utils.Constants;

public class FilterActivity extends Activity {
	@Override
	public void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);
		setContentView(R.layout.activity_filter);

		loadComponents();
	}

	@Override
	public boolean onCreateOptionsMenu(Menu menu) {
		// Inflate the menu; this adds items to the action bar if it is present.
		getMenuInflater().inflate(R.menu.filter, menu);
		return true;
	}

	private void loadComponents() {
		ComponentLoader cl = new ComponentLoader(this);

		cl.loadButton(R.id.liveModeButton, new OnClickListener() {

			@Override
			public void onClick(View v) {
				// TODO Chamar modo continuo
			}
		});

		cl.loadButton(R.id.galleryModeButton, new OnClickListener() {

			@Override
			public void onClick(View v) {
				Intent photoPickerIntent = new Intent(
						Intent.ACTION_PICK,
						android.provider.MediaStore.Images.Media.EXTERNAL_CONTENT_URI);
				photoPickerIntent.setType("image/*");

				startActivityForResult(photoPickerIntent, Constants.SELECT_PICTURE);
			}
		});

		cl.loadButton(R.id.cameraModeButton, new OnClickListener() {

			@Override
			public void onClick(View v) {
				Intent takePictureIntent = new Intent(
						MediaStore.ACTION_IMAGE_CAPTURE);
				Uri mUri = Uri.fromFile(new File(Environment.getExternalStorageDirectory(), "temp_"+  String.valueOf(System.currentTimeMillis())+ ".jpg"));

				
				startActivityForResult(takePictureIntent,
						Constants.TAKE_PICTURE);
			}
		});
	}

	@Override
	protected void onActivityResult(int requestCode, int resultCode, Intent data) {
		super.onActivityResult(requestCode, resultCode, data);


		if (resultCode == Activity.RESULT_OK) {
			Intent showImageIntent = new Intent(this, FilteredImageActivity.class);
			
			switch (requestCode) {
			case Constants.TAKE_PICTURE:
				showImageIntent.putExtras(data);
				break;
			case Constants.SELECT_PICTURE:
				Uri selectedImage = data.getData();
				String[] filePathColumn = { MediaStore.Images.Media.DATA };

				Cursor cursor = getContentResolver().query(selectedImage,
						filePathColumn, null, null, null);
				cursor.moveToFirst();

				int columnIndex = cursor.getColumnIndex(filePathColumn[0]);
				String picturePath = cursor.getString(columnIndex);
				cursor.close();
				
				Toast.makeText(this, picturePath, Toast.LENGTH_LONG).show();
				
				showImageIntent.putExtra("data", BitmapFactory.decodeFile(picturePath));
				break;
			}
			
			startActivity(showImageIntent);
		}

	}
}

package br.usp.ime.tcc.utils;

import java.io.File;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.OutputStream;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.Locale;

import android.content.ContentResolver;
import android.database.Cursor;
import android.graphics.Bitmap;
import android.net.Uri;
import android.os.Environment;
import android.provider.MediaStore;

public final class Utils {
	private Utils() {
		throw new AssertionError();
	}
	
	private static String queryForPicturePath(Uri selectedImageUri, ContentResolver cr) {
		String[] filePathColumn = { MediaStore.Images.Media.DATA };

		Cursor cursor = cr.query(selectedImageUri,
				filePathColumn, null, null, null);
		cursor.moveToFirst();

		int columnIndex = cursor.getColumnIndex(filePathColumn[0]);
		String picturePath = cursor.getString(columnIndex);
		cursor.close();
		return picturePath;
	}
	
	private static File getFileToBeSaved() {
		String timeStamp = new SimpleDateFormat(Constants.DATE_FORMAT, Locale.getDefault())
				.format(new Date());

		File root = Environment.getExternalStorageDirectory();
		File file = new File(root.getAbsolutePath() + Constants.DEFAULT_FOLDER + timeStamp + ".jpg");
		return file;
	}
	
	//Public Methods
	
	public static String getSelectedPicturePath(Uri selectedImageUri, ContentResolver cr) {
		String picturePath = null;

		if (selectedImageUri != null) {
			picturePath = queryForPicturePath(selectedImageUri, cr);
		}
		return picturePath;
	}

	public static File saveToFile(Bitmap toBeSaved) throws IOException {
		File file = null;
		if (toBeSaved != null) {
		file = getFileToBeSaved();
		
		OutputStream fOut;
		fOut = new FileOutputStream(file);
		toBeSaved.compress(Bitmap.CompressFormat.JPEG, 85, fOut);
		fOut.flush();
		fOut.close();
		
		return file;
		}
	}
}

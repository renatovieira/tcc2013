package br.usp.ime.tcc.activities.test;

import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertNotNull;

import org.junit.Before;
import org.junit.Test;
import org.junit.runner.RunWith;
import org.robolectric.Robolectric;
import org.robolectric.RobolectricTestRunner;

import android.content.Intent;
import android.graphics.Bitmap;
import android.graphics.BitmapFactory;
import android.graphics.drawable.BitmapDrawable;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.SeekBar;
import br.usp.ime.tcc.activities.FilteredImageActivity;
import br.usp.ime.tcc.activities.R;
import br.usp.ime.tcc.activities.components.test.ComponentsTester;
import br.usp.ime.tcc.utils.Constants;

@RunWith(RobolectricTestRunner.class)
public class FilteredImageActivityTest {
	private FilteredImageActivity filteredImageActivity;

	private Button saveButton;
	private Button discardButton;
	private ImageView filteredImage;
	private SeekBar intensityBar;

	private FilteredImageActivity startWithBitmapOnExtras() {
		filteredImageActivity = Robolectric
				.buildActivity(FilteredImageActivity.class).create().get();

		Bitmap dummy = BitmapFactory.decodeResource(filteredImageActivity.getResources(), R.drawable.ic_launcher);
		
		Intent intent = filteredImageActivity.getIntent();
		intent.putExtra("data", dummy);
		
		return Robolectric.buildActivity(FilteredImageActivity.class).withIntent(intent).create().get();
	}

	private void loadComponents() {
		getButtons();
		filteredImage = (ImageView) filteredImageActivity
				.findViewById(R.id.filtered_image);
		intensityBar = (SeekBar) filteredImageActivity
				.findViewById(R.id.intensity_bar);
	}

	private void getButtons() {
		discardButton = (Button) filteredImageActivity
				.findViewById(br.usp.ime.tcc.activities.R.id.discard_button);

		saveButton = (Button) filteredImageActivity
				.findViewById(br.usp.ime.tcc.activities.R.id.save_button);
	}

	// Tests
	@Before
	public void setUp() throws Exception {
		filteredImageActivity = startWithBitmapOnExtras();

		loadComponents();
	}

	
	@Test
	public void discardButtonShouldNotBeNullAndBeResponsive() {
		assertEquals(true, ComponentsTester.buttonNotNullAndResponsive(discardButton));
	}

	@Test
	public void saveButtonShouldNotBeNullAndBeResponsive() {
		assertEquals(true, ComponentsTester.buttonNotNullAndResponsive(saveButton));
	}

	@Test
	public void imageViewShouldNotBeNull() {
		assertNotNull(filteredImage);
	}

	@Test
	public void seekbarShouldNotBeNull() {
		assertNotNull(intensityBar);
	}

	@Test
	public void seekbarMaximumShouldBeMaxIntensity() {
		assertEquals(Constants.MAX_INTENSITY, intensityBar.getMax());
	}

	@Test
	public void seekbarProgressShouldBeMaxProgress() {
		assertEquals(Constants.PROGRESS, intensityBar.getProgress());
	}
	
	@Test
	public void imageViewImageShouldNotBeTheOneReceivedFromIntent() {
		Bitmap bitmap = (Bitmap) filteredImageActivity.getIntent().getExtras().get("data");
		
		assertEquals(bitmap, ((BitmapDrawable)filteredImage.getDrawable()).getBitmap());
	}
	
	@Test
	public void extrasShouldNotBeNull () {
		assertNotNull(filteredImageActivity.getIntent().getExtras());
	}
}

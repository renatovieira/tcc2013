package br.usp.ime.tcc.filter;

import org.junit.Before;
import org.junit.runner.RunWith;
import org.powermock.api.mockito.PowerMockito;
import org.powermock.core.classloader.annotations.PrepareForTest;
import org.powermock.modules.junit4.PowerMockRunner;

import static org.junit.Assert.*;
import static org.mockito.Mockito.*;

import android.graphics.Bitmap;

@RunWith(PowerMockRunner.class)
@PrepareForTest(Bitmap.class)
public class FilterTest {
	private static final int DEFAULT_MOCK_BITMAP_WIDTH = 3;
	private static final int DEFAULT_MOCK_BITMAP_HEIGHT = 3;
	private static final int[] MOCK_BITMAP_VALUES = {1, 2};
	
	private Bitmap defaultBmp;
	private Filter filter;
	
	private Bitmap createMockBitmap(int width, int height, int [] values) {
		defaultBmp = PowerMockito.mock(Bitmap.class);
		when(defaultBmp.getWidth()).thenReturn(width);
		when(defaultBmp.getWidth()).thenReturn(height);
		when(defaultBmp.getConfig()).thenReturn(null);
		
		return defaultBmp;
	}

	// Tests
	@Before
	public void setUp() throws Exception {
		defaultBmp = createMockBitmap(DEFAULT_MOCK_BITMAP_WIDTH, DEFAULT_MOCK_BITMAP_HEIGHT, MOCK_BITMAP_VALUES);
	}
	
	
	
	
}
